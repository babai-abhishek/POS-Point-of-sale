name: Build Docker Image for Inventory Module

on:
  push:
    branches:
      - develop-aws-infra  # Trigger on pushes to this branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      # Step 3: Navigate to the Inventory module directory and build the JAR file using Maven
      - name: Build Inventory Module
        run: |
          cd Inventory  # Navigate to the Inventory module
          mvn clean install -DskipTests

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          cd Inventory  # Ensure you're in the Inventory directory
          docker build -t inventory-docker .

  push-to-ecr:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the 'build' job

    steps:
      # Step 1: Check out the code (optional, needed for ECR login)
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Debug Secrets
        run: |
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"
          echo "AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}"
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

      # Step 3: Login to ECR
      - name: Login to Amazon ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 4: Tag the Docker image
      - name: Tag Docker image
        run: |
          docker tag inventory-docker:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pos:latest

      # Step 5: Push the Docker image to ECR
      - name: Push Docker image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pos:latest
